{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maogr\\\\Desktop\\\\Termiclad\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/Chat.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE = 'http://localhost:5000';\nfunction Chat({\n  user,\n  token,\n  socket,\n  onLogout\n}) {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  useEffect(() => {\n    if (socket) {\n      socket.on('new_message', message => {\n        if (selectedUser && (message.sender_id === selectedUser.id || message.receiver_id === selectedUser.id)) {\n          setMessages(prev => [...prev, message]);\n        }\n      });\n      socket.on('message_sent', message => {\n        setMessages(prev => [...prev, message]);\n      });\n      return () => {\n        socket.off('new_message');\n        socket.off('message_sent');\n      };\n    }\n  }, [socket, selectedUser]);\n  const fetchUsers = async () => {\n    try {\n      const response = await fetch(`${API_BASE}/api/users`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const usersData = await response.json();\n        setUsers(usersData);\n      }\n    } catch (error) {\n      console.error('Failed to fetch users:', error);\n    }\n  };\n  const fetchMessages = async userId => {\n    try {\n      setLoading(true);\n      const response = await fetch(`${API_BASE}/api/messages/${userId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const messagesData = await response.json();\n        setMessages(messagesData);\n      }\n    } catch (error) {\n      console.error('Failed to fetch messages:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleUserSelect = selectedUser => {\n    setSelectedUser(selectedUser);\n    fetchMessages(selectedUser.id);\n  };\n  const sendMessage = async e => {\n    e.preventDefault();\n    if (!newMessage.trim() || !selectedUser) return;\n    const messageData = {\n      senderId: user.id,\n      receiverId: selectedUser.id,\n      message: newMessage.trim()\n    };\n    socket.emit('send_message', messageData);\n    setNewMessage('');\n  };\n  const formatTime = timestamp => {\n    return new Date(timestamp).toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-avatar\",\n            children: user.username[0].toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"username\",\n              children: user.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"status\",\n              children: \"Online\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onLogout,\n          className: \"logout-button\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"users-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Contacts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), users.map(userItem => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `user-item ${(selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id) === userItem.id ? 'active' : ''}`,\n          onClick: () => handleUserSelect(userItem),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-avatar\",\n            children: userItem.username[0].toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"username\",\n              children: userItem.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `status ${userItem.is_online ? 'online' : 'offline'}`,\n              children: userItem.is_online ? 'Online' : 'Offline'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 29\n          }, this)]\n        }, userItem.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-main\",\n      children: selectedUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-user-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-avatar\",\n              children: selectedUser.username[0].toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"username\",\n                children: selectedUser.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `status ${selectedUser.is_online ? 'online' : 'offline'}`,\n                children: selectedUser.is_online ? 'Online' : 'Offline'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages-container\",\n          children: [loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading\",\n            children: \"Loading messages...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 33\n          }, this) : messages.length > 0 ? messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${message.sender_id === user.id ? 'sent' : 'received'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: message.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-time\",\n              children: formatTime(message.timestamp)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 41\n            }, this)]\n          }, message.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 37\n          }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-messages\",\n            children: \"No messages yet. Start the conversation!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: sendMessage,\n          className: \"message-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value),\n            placeholder: \"Type a message...\",\n            className: \"message-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"send-button\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-chat-selected\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Welcome to Termiclad!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a contact to start chatting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n}\n_s(Chat, \"tX4A89EGk/WDup/bKqcX7Qvavp4=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE","Chat","user","token","socket","onLogout","_s","users","setUsers","selectedUser","setSelectedUser","messages","setMessages","newMessage","setNewMessage","loading","setLoading","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","fetchUsers","on","message","sender_id","id","receiver_id","prev","off","response","fetch","headers","ok","usersData","json","error","console","fetchMessages","userId","messagesData","handleUserSelect","sendMessage","e","preventDefault","trim","messageData","senderId","receiverId","emit","formatTime","timestamp","Date","toLocaleTimeString","hour","minute","className","children","username","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","userItem","is_online","length","ref","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/maogr/Desktop/Termiclad/frontend/src/components/Chat.js"],"sourcesContent":["// frontend/src/components/Chat.js\r\nimport React, { useState, useEffect, useRef } from 'react';\r\n\r\nconst API_BASE = 'http://localhost:5000';\r\n\r\nfunction Chat({ user, token, socket, onLogout }) {\r\n    const [users, setUsers] = useState([]);\r\n    const [selectedUser, setSelectedUser] = useState(null);\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const messagesEndRef = useRef(null);\r\n\r\n    const scrollToBottom = () => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    };\r\n\r\n    useEffect(() => {\r\n        scrollToBottom();\r\n    }, [messages]);\r\n\r\n    useEffect(() => {\r\n        fetchUsers();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (socket) {\r\n            socket.on('new_message', (message) => {\r\n                if (selectedUser &&\r\n                    (message.sender_id === selectedUser.id || message.receiver_id === selectedUser.id)) {\r\n                    setMessages(prev => [...prev, message]);\r\n                }\r\n            });\r\n\r\n            socket.on('message_sent', (message) => {\r\n                setMessages(prev => [...prev, message]);\r\n            });\r\n\r\n            return () => {\r\n                socket.off('new_message');\r\n                socket.off('message_sent');\r\n            };\r\n        }\r\n    }, [socket, selectedUser]);\r\n\r\n    const fetchUsers = async () => {\r\n        try {\r\n            const response = await fetch(`${API_BASE}/api/users`, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            });\r\n\r\n            if (response.ok) {\r\n                const usersData = await response.json();\r\n                setUsers(usersData);\r\n            }\r\n        } catch (error) {\r\n            console.error('Failed to fetch users:', error);\r\n        }\r\n    };\r\n\r\n    const fetchMessages = async (userId) => {\r\n        try {\r\n            setLoading(true);\r\n            const response = await fetch(`${API_BASE}/api/messages/${userId}`, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            });\r\n\r\n            if (response.ok) {\r\n                const messagesData = await response.json();\r\n                setMessages(messagesData);\r\n            }\r\n        } catch (error) {\r\n            console.error('Failed to fetch messages:', error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleUserSelect = (selectedUser) => {\r\n        setSelectedUser(selectedUser);\r\n        fetchMessages(selectedUser.id);\r\n    };\r\n\r\n    const sendMessage = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!newMessage.trim() || !selectedUser) return;\r\n\r\n        const messageData = {\r\n            senderId: user.id,\r\n            receiverId: selectedUser.id,\r\n            message: newMessage.trim()\r\n        };\r\n\r\n        socket.emit('send_message', messageData);\r\n        setNewMessage('');\r\n    };\r\n\r\n    const formatTime = (timestamp) => {\r\n        return new Date(timestamp).toLocaleTimeString('en-US', {\r\n            hour: '2-digit',\r\n            minute: '2-digit'\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            {/* Sidebar */}\r\n            <div className=\"chat-sidebar\">\r\n                <div className=\"sidebar-header\">\r\n                    <div className=\"user-info\">\r\n                        <div className=\"user-avatar\">{user.username[0].toUpperCase()}</div>\r\n                        <div>\r\n                            <div className=\"username\">{user.username}</div>\r\n                            <div className=\"status\">Online</div>\r\n                        </div>\r\n                    </div>\r\n                    <button onClick={onLogout} className=\"logout-button\">\r\n                        Logout\r\n                    </button>\r\n                </div>\r\n\r\n                <div className=\"users-list\">\r\n                    <h3>Contacts</h3>\r\n                    {users.map(userItem => (\r\n                        <div\r\n                            key={userItem.id}\r\n                            className={`user-item ${selectedUser?.id === userItem.id ? 'active' : ''}`}\r\n                            onClick={() => handleUserSelect(userItem)}\r\n                        >\r\n                            <div className=\"user-avatar\">\r\n                                {userItem.username[0].toUpperCase()}\r\n                            </div>\r\n                            <div className=\"user-details\">\r\n                                <div className=\"username\">{userItem.username}</div>\r\n                                <div className={`status ${userItem.is_online ? 'online' : 'offline'}`}>\r\n                                    {userItem.is_online ? 'Online' : 'Offline'}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Chat Area */}\r\n            <div className=\"chat-main\">\r\n                {selectedUser ? (\r\n                    <>\r\n                        <div className=\"chat-header\">\r\n                            <div className=\"chat-user-info\">\r\n                                <div className=\"user-avatar\">\r\n                                    {selectedUser.username[0].toUpperCase()}\r\n                                </div>\r\n                                <div>\r\n                                    <div className=\"username\">{selectedUser.username}</div>\r\n                                    <div className={`status ${selectedUser.is_online ? 'online' : 'offline'}`}>\r\n                                        {selectedUser.is_online ? 'Online' : 'Offline'}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"messages-container\">\r\n                            {loading ? (\r\n                                <div className=\"loading\">Loading messages...</div>\r\n                            ) : messages.length > 0 ? (\r\n                                messages.map(message => (\r\n                                    <div\r\n                                        key={message.id}\r\n                                        className={`message ${message.sender_id === user.id ? 'sent' : 'received'}`}\r\n                                    >\r\n                                        <div className=\"message-content\">\r\n                                            {message.message}\r\n                                        </div>\r\n                                        <div className=\"message-time\">\r\n                                            {formatTime(message.timestamp)}\r\n                                        </div>\r\n                                    </div>\r\n                                ))\r\n                            ) : (\r\n                                <div className=\"no-messages\">\r\n                                    No messages yet. Start the conversation!\r\n                                </div>\r\n                            )}\r\n                            <div ref={messagesEndRef} />\r\n                        </div>\r\n\r\n                        <form onSubmit={sendMessage} className=\"message-form\">\r\n                            <input\r\n                                type=\"text\"\r\n                                value={newMessage}\r\n                                onChange={(e) => setNewMessage(e.target.value)}\r\n                                placeholder=\"Type a message...\"\r\n                                className=\"message-input\"\r\n                            />\r\n                            <button type=\"submit\" className=\"send-button\">\r\n                                Send\r\n                            </button>\r\n                        </form>\r\n                    </>\r\n                ) : (\r\n                    <div className=\"no-chat-selected\">\r\n                        <h2>Welcome to Termiclad!</h2>\r\n                        <p>Select a contact to start chatting</p>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}